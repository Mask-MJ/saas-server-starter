/* eslint-disable */
export default async () => {
    const t = {
        ["./modules/system/role/role.entity"]: await import("./modules/system/role/role.entity"),
        ["./modules/system/dept/dept.entity"]: await import("./modules/system/dept/dept.entity"),
        ["./modules/system/menu/menu.entity"]: await import("./modules/system/menu/menu.entity"),
        ["./modules/project/factory/factory.entity"]: await import("./modules/project/factory/factory.entity"),
        ["./modules/project/device/device.entity"]: await import("./modules/project/device/device.entity")
    };
    return { "@nestjs/swagger": { "models": [[import("./common/dto/base.dto"), { "PaginateDto": { page: { required: true, type: () => Number, description: "\u9875\u7801", example: 1, default: 1 }, pageSize: { required: true, type: () => Number, description: "\u6BCF\u9875\u6570\u91CF", example: 10, default: 10 } }, "TimeDto": { beginTime: { required: true, type: () => Date, description: "\u5F00\u59CB\u65F6\u95F4", example: "2024-01-01 00:00:00" }, endTime: { required: true, type: () => Date, description: "\u7ED3\u675F\u65F6\u95F4", example: "2025-01-01 00:00:00" } }, "BaseDto": {}, "UploadDto": { fileName: { required: true, type: () => String }, file: { required: true, type: () => Object } } }], [import("./modules/system/user/user.dto"), { "CreateUserDto": { username: { required: true, type: () => String, description: "\u8D26\u53F7", example: "admin" }, password: { required: true, type: () => String, description: "\u5BC6\u7801", example: "123456", minLength: 4 }, nickname: { required: false, type: () => String, description: "\u6635\u79F0", example: "\u7BA1\u7406\u5458" }, avatar: { required: false, type: () => String, description: "\u5934\u50CF", example: "http://xxx.com/xxx.jpg", format: "uri" }, email: { required: false, type: () => String, description: "\u90AE\u7BB1", example: "xxx@qq.com", format: "email" }, phoneNumber: { required: false, type: () => String, description: "\u624B\u673A\u53F7", example: "18888888888" }, sex: { required: false, type: () => Number, description: "\u6027\u522B 0: \u5973 1: \u7537", example: 1, default: 1 }, status: { required: false, type: () => Boolean, description: "\u72B6\u6001 false: \u7981\u7528 true: \u542F\u7528", example: true, default: true }, remark: { required: false, type: () => String, description: "\u5907\u6CE8", example: "\u5907\u6CE8" }, postId: { required: false, type: () => Number, description: "\u5C97\u4F4DID", example: 1 }, deptId: { required: false, type: () => Number, description: "\u90E8\u95E8ID", example: 1 }, roleIds: { required: false, type: () => [Number], description: "\u89D2\u8272ID", example: [1, 2] }, menuIds: { required: false, type: () => [Number], description: "\u83DC\u5355ID", example: [1, 2] } }, "QueryUserDto": {}, "UpdateUserDto": { id: { required: true, type: () => Number } }, "ChangePasswordDto": { id: { required: true, type: () => Number }, oldPassword: { required: true, type: () => String, default: "" }, password: { required: true, type: () => String } } }], [import("./modules/auth/authentication/authentication.dto"), { "SignInDto": { username: { required: true, type: () => String, description: "\u8D26\u53F7", example: "admin", minLength: 4 }, password: { required: true, type: () => String, description: "\u5BC6\u7801", example: "123456", minLength: 4 } }, "SignUpDto": {}, "RefreshTokenDto": { refreshToken: { required: true, type: () => String } } }], [import("./modules/system/role/role.entity"), { "RoleEntity": { id: { required: true, type: () => Number }, name: { required: true, type: () => String }, value: { required: true, type: () => String }, sort: { required: true, type: () => Number }, remark: { required: true, type: () => String }, createBy: { required: true, type: () => String }, updateBy: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date } } }], [import("./modules/system/user/user.entity"), { "UserEntity": { id: { required: true, type: () => Number }, isAdmin: { required: true, type: () => Boolean }, username: { required: true, type: () => String }, nickname: { required: true, type: () => String }, avatar: { required: true, type: () => String }, email: { required: true, type: () => String }, phoneNumber: { required: true, type: () => String }, sex: { required: true, type: () => Number }, status: { required: true, type: () => Boolean }, createBy: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, remark: { required: true, type: () => String }, role: { required: true, type: () => [t["./modules/system/role/role.entity"].RoleEntity] } } }], [import("./modules/system/dept/dept.dto"), { "CreateDeptDto": { name: { required: true, type: () => String, description: "\u90E8\u95E8\u540D\u79F0", example: "\u6280\u672F\u90E8" }, sort: { required: false, type: () => Number, description: "\u6392\u5E8F", example: 1 }, leader: { required: false, type: () => String, description: "\u8D1F\u8D23\u4EBA", example: "\u5F20\u4E09" }, phone: { required: false, type: () => String, description: "\u8D1F\u8D23\u4EBA\u7535\u8BDD", example: "13000000000" }, email: { required: false, type: () => String, description: "\u90AE\u7BB1", example: "xxx@qq.com" }, parentId: { required: false, type: () => Number, description: "\u4E0A\u7EA7\u90E8\u95E8ID" } }, "QueryDeptDto": {}, "UpdateDeptDto": { id: { required: true, type: () => Number } } }], [import("./modules/system/dept/dept.entity"), { "DeptEntity": { id: { required: true, type: () => Number }, name: { required: true, type: () => String }, sort: { required: true, type: () => Number }, leader: { required: true, type: () => String }, phone: { required: true, type: () => String }, email: { required: true, type: () => String }, parentId: { required: true, type: () => Number, nullable: true }, children: { required: false, type: () => [t["./modules/system/dept/dept.entity"].DeptEntity], nullable: true }, createBy: { required: true, type: () => String }, updateBy: { required: true, type: () => String, nullable: true }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date } } }], [import("./modules/system/dict-data/dict-data.dto"), { "CreateDictDataDto": { name: { required: true, type: () => String, description: "\u5B57\u5178\u6570\u636E\u540D\u79F0", example: "\u6027\u522B" }, value: { required: true, type: () => String, description: "\u5B57\u5178\u6570\u636E\u503C", example: "1" }, sort: { required: false, type: () => Number, description: "\u6392\u5E8F", example: 1 }, type: { required: false, type: () => String, description: "\u7C7B\u578B 0: \u914D\u7F6E 1: \u53C2\u6570 2: \u8BCA\u65AD", example: "0" }, status: { required: false, type: () => Boolean, description: "\u72B6\u6001 false: \u7981\u7528 true: \u542F\u7528", example: true, default: true }, dictTypeId: { required: true, type: () => Number, description: "\u5B57\u5178\u7C7B\u578BID", example: 1 }, remark: { required: false, type: () => String, description: "\u5907\u6CE8", example: "\u5907\u6CE8" }, parentId: { required: false, type: () => Number, description: "\u7236\u7EA7\u83DC\u5355id", example: 0 } }, "QueryDictDataDto": { dictTypeValue: { required: false, type: () => String, description: "\u5B57\u5178\u7C7B\u578B\u503C", example: "chart" } }, "UpdateDictDataDto": { id: { required: true, type: () => Number } } }], [import("./modules/system/dict-data/dict-data.entity"), { "DictDataEntity": { id: { required: true, type: () => Number }, name: { required: true, type: () => String }, value: { required: true, type: () => String }, sort: { required: true, type: () => Number }, status: { required: true, type: () => Boolean }, type: { required: true, type: () => String }, cnTitle: { required: true, type: () => String, nullable: true }, enTitle: { required: true, type: () => String, nullable: true }, isChart: { required: true, type: () => Boolean }, chartType: { required: true, type: () => String }, upperLimit: { required: true, type: () => String, nullable: true }, lowerLimit: { required: true, type: () => String, nullable: true }, dictTypeId: { required: true, type: () => Number }, treeId: { required: true, type: () => Number, nullable: true }, createBy: { required: true, type: () => String }, updateBy: { required: true, type: () => String, nullable: true }, remark: { required: true, type: () => String, nullable: true }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date } } }], [import("./modules/system/dict-type/dict-type.dto"), { "CreateDictTypeDto": { name: { required: true, type: () => String, description: "\u5B57\u5178\u540D\u79F0", example: "\u6027\u522B" }, value: { required: true, type: () => String, description: "\u5B57\u5178\u503C", example: "1" }, status: { required: false, type: () => Boolean, description: "\u72B6\u6001", example: true }, remark: { required: false, type: () => String, description: "\u5907\u6CE8", example: "\u5907\u6CE8" } }, "QueryDictTypeDto": {}, "UpdateDictTypeDto": { id: { required: true, type: () => Number } } }], [import("./modules/system/dict-type/dict-type.entity"), { "DictTypeEntity": { id: { required: true, type: () => Number }, name: { required: true, type: () => String }, value: { required: true, type: () => String }, status: { required: true, type: () => Boolean }, createBy: { required: true, type: () => String }, updateBy: { required: true, type: () => String, nullable: true }, remark: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date } } }], [import("./modules/system/menu/menu.dto"), { "CreateMenuDto": { name: { required: true, type: () => String, description: "\u83DC\u5355\u540D\u79F0", example: "\u7CFB\u7EDF\u7BA1\u7406" }, path: { required: true, type: () => String, description: "\u83DC\u5355\u8DEF\u5F84", example: "/system" }, icon: { required: true, type: () => String, description: "\u83DC\u5355\u56FE\u6807", example: "i-line-md:external-link" }, hidden: { required: false, type: () => Boolean, description: "\u662F\u5426\u9690\u85CF", example: false, default: false }, status: { required: false, type: () => Boolean, description: "\u72B6\u6001 false: \u7981\u7528 true: \u542F\u7528", example: true, default: true }, sort: { required: false, type: () => Number, description: "\u6392\u5E8F", example: 0, default: 0 }, parentId: { required: false, type: () => Number, description: "\u7236\u7EA7\u83DC\u5355id", example: 0 } }, "QueryMenuDto": {}, "UpdateMenuDto": { id: { required: true, type: () => Number } } }], [import("./modules/system/menu/menu.entity"), { "MenuEntity": { id: { required: true, type: () => Number }, name: { required: true, type: () => String }, path: { required: true, type: () => String }, icon: { required: true, type: () => String }, hidden: { required: true, type: () => Boolean }, status: { required: true, type: () => Boolean }, sort: { required: true, type: () => Number }, parentId: { required: true, type: () => Number, nullable: true }, children: { required: false, type: () => [t["./modules/system/menu/menu.entity"].MenuEntity], nullable: true }, remark: { required: true, type: () => String }, createBy: { required: true, type: () => String }, updateBy: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date } } }], [import("./modules/system/post/post.dto"), { "CreatePostDto": { code: { required: true, type: () => String, description: "\u5C97\u4F4D\u7F16\u7801", example: "tech" }, name: { required: true, type: () => String, description: "\u5C97\u4F4D\u540D\u79F0", example: "\u6280\u672F\u90E8" }, sort: { required: false, type: () => Number, description: "\u6392\u5E8F", example: 1 }, remark: { required: false, type: () => String, description: "\u5907\u6CE8", example: "\u8FD9\u662F\u4E00\u4E2A\u6280\u672F\u90E8" } }, "QueryPostDto": {}, "UpdatePostDto": { id: { required: true, type: () => Number } } }], [import("./modules/system/post/post.entity"), { "PostEntity": { id: { required: true, type: () => Number }, code: { required: true, type: () => String }, name: { required: true, type: () => String }, sort: { required: true, type: () => Number }, remark: { required: true, type: () => String }, createBy: { required: true, type: () => String }, updateBy: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date } } }], [import("./modules/system/role/role.dto"), { "CreateRoleDto": { name: { required: true, type: () => String, description: "\u6743\u9650\u540D\u79F0", example: "\u7BA1\u7406\u5458" }, value: { required: true, type: () => String, description: "\u6743\u9650\u503C", example: "admin" }, sort: { required: false, type: () => Number, description: "\u6392\u5E8F", example: 0, default: 0 }, remark: { required: false, type: () => String, description: "\u5907\u6CE8", example: "\u5907\u6CE8" }, menuIds: { required: true, type: () => [Number], description: "\u83DC\u5355ID", example: [1, 2] } }, "QueryRoleDto": {}, "UpdateRoleDto": { id: { required: true, type: () => Number } } }], [import("./modules/monitor/login/login.dto"), { "CreateLoginDto": { userId: { required: true, type: () => Number }, sessionId: { required: true, type: () => String }, username: { required: true, type: () => String }, ip: { required: true, type: () => String } }, "QueryLoginDto": {} }], [import("./modules/monitor/login/login.entity"), { "LoginEntity": { id: { required: true, type: () => Number }, userId: { required: true, type: () => Number }, sessionId: { required: true, type: () => String }, username: { required: true, type: () => String }, ip: { required: true, type: () => String }, address: { required: true, type: () => String }, createdAt: { required: true, type: () => Date } } }], [import("./modules/monitor/operation/operation.dto"), { "CreateOperationDto": { title: { required: true, type: () => String }, username: { required: true, type: () => String }, businessType: { required: true, type: () => Number }, module: { required: true, type: () => String }, ip: { required: true, type: () => String } }, "QueryOperationDto": {} }], [import("./modules/monitor/operation/operation.entity"), { "OperationEntity": { id: { required: true, type: () => Number }, title: { required: true, type: () => String }, businessType: { required: true, type: () => Number }, module: { required: true, type: () => String }, username: { required: true, type: () => String }, ip: { required: true, type: () => String }, address: { required: true, type: () => String }, createdAt: { required: true, type: () => Date } } }], [import("./modules/monitor/info/info.entity"), { "InfoEntity": { cpu: { required: true, type: () => ({ cores: { required: true, type: () => Number }, brand: { required: true, type: () => String }, manufacturer: { required: true, type: () => String }, speed: { required: true, type: () => String } }) }, memory: { required: true, type: () => ({ total: { required: true, type: () => String }, free: { required: true, type: () => String }, used: { required: true, type: () => String }, usage: { required: true, type: () => String } }) }, osInfo: { required: true, type: () => ({ platform: { required: true, type: () => String }, release: { required: true, type: () => String }, arch: { required: true, type: () => String }, hostname: { required: true, type: () => String } }) } } }], [import("./modules/project/analysis-task/analysis-task.dto"), { "CreateAnalysisTaskDto": { name: { required: true, type: () => String, description: "\u4EFB\u52A1\u540D\u79F0", example: "\u5206\u6790\u4EFB\u52A11" }, status: { required: true, type: () => Number, description: "\u72B6\u6001 (0: \u5F85\u6267\u884C, 1: \u6267\u884C\u4E2D, 2: \u5DF2\u5B8C\u6210, 3: \u5931\u8D25)", example: 1, default: 0 }, pdfs: { required: true, type: () => String, description: "pdf\u8DEF\u5F84", format: "json" }, factoryId: { required: true, type: () => Number, description: "\u5DE5\u5382ID", example: 1 }, ruleId: { required: true, type: () => Number, description: "\u89C4\u5219ID", example: 1 }, remark: { required: false, type: () => String, description: "\u5907\u6CE8", example: "\u5907\u6CE8" } }, "QueryAnalysisTaskDto": {}, "UpdateAnalysisTaskDto": { id: { required: true, type: () => Number } } }], [import("./modules/project/factory/factory.entity"), { "FactoryEntity": { id: { required: true, type: () => Number }, name: { required: true, type: () => String }, status: { required: true, type: () => Boolean }, code: { required: true, type: () => String }, industry: { required: true, type: () => String }, province: { required: true, type: () => String }, city: { required: true, type: () => String }, county: { required: true, type: () => String }, address: { required: true, type: () => String }, longitude: { required: true, type: () => String }, latitude: { required: true, type: () => String }, parentId: { required: true, type: () => Number, nullable: true }, remark: { required: true, type: () => String }, createBy: { required: true, type: () => String }, updateBy: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date } } }], [import("./modules/project/analysis-task/analysis-task.entity"), { "AnalysisTaskEntity": { id: { required: true, type: () => Number }, name: { required: true, type: () => String }, status: { required: true, type: () => Number }, remark: { required: true, type: () => String }, pdfs: { required: true }, factoryId: { required: true, type: () => Number }, factory: { required: true, type: () => t["./modules/project/factory/factory.entity"].FactoryEntity }, result: { required: true, type: () => [Number] }, ruleId: { required: true, type: () => Number }, createBy: { required: true, type: () => String }, updateBy: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date } } }], [import("./modules/project/device/device.entity"), { "DeviceEntity": { id: { required: true, type: () => Number }, name: { required: true, type: () => String }, status: { required: true, type: () => Boolean }, remark: { required: true, type: () => String }, factoryId: { required: true, type: () => Number }, factory: { required: true, type: () => t["./modules/project/factory/factory.entity"].FactoryEntity }, createBy: { required: true, type: () => String }, updateBy: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date } } }], [import("./modules/project/valve/valve.entity"), { "ValveEntity": { id: { required: true, type: () => Number }, source: { required: true, type: () => String }, no: { required: true, type: () => String }, tag: { required: true, type: () => String }, unit: { required: true, type: () => String }, fluidName: { required: true, type: () => String }, criticalApplication: { required: true, type: () => String }, since: { required: true, type: () => Date }, serialNumber: { required: true, type: () => String }, valveBrand: { required: true, type: () => String }, valveSeries: { required: true, type: () => String }, valveSize: { required: true, type: () => String }, valveCv: { required: true, type: () => String }, valveRating: { required: true, type: () => String }, valveEndConnection: { required: true, type: () => String }, valveBodyMaterial: { required: true, type: () => String }, valveBonnet: { required: true, type: () => String }, valveTrim: { required: true, type: () => String }, valveSeatLeakage: { required: true, type: () => String }, valveDescription: { required: true, type: () => String }, actuatorBrand: { required: true, type: () => String }, actuatorSeries: { required: true, type: () => String }, actuatorSize: { required: true, type: () => String }, handwheel: { required: true, type: () => String }, actuatorActionForm: { required: true, type: () => String }, actuatorDescription: { required: true, type: () => String }, regulatorBrand: { required: true, type: () => String }, regulatorModel: { required: true, type: () => String }, regulatorDescription: { required: true, type: () => String }, positionerBrand: { required: true, type: () => String }, positionerModel: { required: true, type: () => String }, positionerDescription: { required: true, type: () => String }, sovBrand: { required: true, type: () => String }, sovModel: { required: true, type: () => String }, sovQty: { required: true, type: () => Number }, sovDescription: { required: true, type: () => String }, lsBrand: { required: true, type: () => String }, lsModel: { required: true, type: () => String }, lsQty: { required: true, type: () => Number }, lsDescription: { required: true, type: () => String }, tripValveBrand: { required: true, type: () => String }, tripValveModel: { required: true, type: () => String }, tripValveDescription: { required: true, type: () => String }, vbBrand: { required: true, type: () => String }, vbModel: { required: true, type: () => String }, vbQty: { required: true, type: () => Number }, vbDescription: { required: true, type: () => String }, qeBrand: { required: true, type: () => String }, qeModel: { required: true, type: () => String }, qeQty: { required: true, type: () => Number }, qeDescription: { required: true, type: () => String }, pilotBrand: { required: true, type: () => String }, pilotModel: { required: true, type: () => String }, pilotQty: { required: true, type: () => Number }, pilotDescription: { required: true, type: () => String }, valveStemSize: { required: true, type: () => String }, stroke: { required: true, type: () => String }, signalComparatorBrand: { required: true, type: () => String }, signalComparatorModel: { required: true, type: () => String }, signalComparatorDescription: { required: true, type: () => String }, parts: { required: true, type: () => String }, deviceId: { required: true, type: () => Number }, device: { required: true, type: () => t["./modules/project/device/device.entity"].DeviceEntity }, factoryId: { required: true, type: () => Number }, factory: { required: true, type: () => t["./modules/project/factory/factory.entity"].FactoryEntity }, analysisTaskId: { required: true, type: () => Number }, createBy: { required: true, type: () => String }, updateBy: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date } }, "ValveOperatingDataEntity": { id: { required: true, type: () => Number }, tag: { required: true, type: () => String }, valveId: { required: true, type: () => Number }, time: { required: true, type: () => Date } } }], [import("./modules/project/device/device.dto"), { "CreateDeviceDto": { name: { required: true, type: () => String, description: "\u88C5\u7F6E\u540D\u79F0", example: "\u88C5\u7F6E1" }, status: { required: false, type: () => Boolean, description: "\u72B6\u6001 false: \u7981\u7528 true: \u542F\u7528", example: true, default: true }, remark: { required: false, type: () => String, description: "\u88C5\u7F6E\u63CF\u8FF0", example: "\u8FD9\u662F\u4E00\u4E2A\u88C5\u7F6E", default: "" }, factoryId: { required: true, type: () => Number, description: "\u5DE5\u5382id", example: 1 }, valveIds: { required: false, type: () => [Number], description: "\u9600\u95E8ids", example: [1, 2, 3] } }, "QueryDeviceDto": {}, "UpdateDeviceDto": { id: { required: true, type: () => Number } } }], [import("./modules/project/factory/factory.dto"), { "CreateFactoryDto": { name: { required: true, type: () => String, description: "\u5DE5\u5382\u540D\u79F0", example: "\u5DE5\u53821" }, status: { required: false, type: () => Boolean, description: "\u72B6\u6001 false: \u7981\u7528 true: \u542F\u7528", example: true, default: true }, industry: { required: false, type: () => String, description: "\u884C\u4E1A", example: "\u65B0\u80FD\u6E90" }, code: { required: false, type: () => String, description: "\u5730\u5740\u7F16\u7801", example: "130010" }, province: { required: false, type: () => String, description: "\u7701\u4EFD", example: "\u5E7F\u4E1C\u7701" }, city: { required: false, type: () => String, description: "\u57CE\u5E02", example: "\u5E7F\u5DDE\u5E02" }, county: { required: false, type: () => String, description: "\u533A\u53BF", example: "\u5929\u6CB3\u533A" }, address: { required: false, type: () => String, description: "\u5DE5\u5382\u5730\u5740", example: "\u5730\u57401" }, longitude: { required: false, type: () => String, description: "\u5DE5\u5382\u5750\u6807(\u7ECF\u5EA6)", example: 1.1, default: "" }, latitude: { required: false, type: () => String, description: "\u5DE5\u5382\u5750\u6807(\u7EAC\u5EA6)", example: 1.1, default: "" }, remark: { required: false, type: () => String, description: "\u5DE5\u5382\u63CF\u8FF0", example: "\u63CF\u8FF01", default: "" }, parentId: { required: false, type: () => Number, description: "\u7236\u7EA7id", example: 1 } }, "QueryFactoryDto": { filterId: { required: false, type: () => Number } }, "UpdateFactoryDto": { id: { required: true, type: () => Number } }, "ImportValveDataDto": { factoryId: { required: true, type: () => Number }, reportMode: { required: false, type: () => String } }, "ReportDto": { factoryId: { required: false, type: () => Number, description: "\u5DE5\u5382id", example: 1 }, analysisTaskId: { required: false, type: () => Number, description: "\u5206\u6790\u4EFB\u52A1id", example: 1 }, reportMode: { required: false, type: () => String, description: "\u62A5\u544A\u6A21\u5F0F", example: "factory" }, valveTags: { required: false, type: () => [String], description: "\u9600\u95E8ids", example: [1, 2, 3] } } }], [import("./modules/project/valve/valve.dto"), { "CreateValveDto": { source: { required: false, type: () => String, description: "\u6765\u6E90", example: "hart" }, no: { required: false, type: () => String, description: "\u7F16\u7801", example: "123456" }, tag: { required: true, type: () => String, description: "\u9600\u95E8\u4F4D\u53F7", example: "FV-3001B" }, unit: { required: false, type: () => String, description: "\u88C5\u7F6E", example: "Fisher" }, fluidName: { required: false, type: () => String, description: "\u4ECB\u8D28", example: "\u6C28\u6C34" }, criticalApplication: { required: false, type: () => String, description: "\u5173\u952E\u5E94\u7528", example: "\u53CD\u5E94\u5668" }, since: { required: false, type: () => Date, description: "\u6295\u7528\u65F6\u95F4", example: 1714752000000 }, serialNumber: { required: false, type: () => String, description: "\u9600\u4F53\u5E8F\u5217\u53F7", example: "123456" }, valveBrand: { required: false, type: () => String, description: "\u9600\u4F53\u54C1\u724C", example: "Fisher" }, valveSeries: { required: false, type: () => String, description: "\u7CFB\u5217", example: "\u7CFB\u5217" }, valveSize: { required: false, type: () => String, description: "\u9600\u4F53\u7C7B\u578B", example: "\u7403\u9600" }, valveCv: { required: false, type: () => String, description: "\u9600\u4F53\u6D41\u91CF\u7CFB\u6570", example: "DN50" }, valveRating: { required: false, type: () => String, description: "\u9600\u4F53\u78C5\u7EA7", example: "150LB" }, valveEndConnection: { required: false, type: () => String, description: "\u9600\u4F53\u8FDE\u63A5\u5F62\u5F0F", example: "\u6CD5\u5170" }, valveBodyMaterial: { required: false, type: () => String, description: "\u9600\u4F53\u9600\u4F53\u6750\u8D28", example: "\u78B3\u94A2" }, valveBonnet: { required: false, type: () => String, description: "\u9600\u76D6\u5F62\u5F0F", example: "\u6CD5\u5170" }, valveTrim: { required: false, type: () => String, description: "\u9600\u5185\u4EF6", example: "316" }, valveSeatLeakage: { required: false, type: () => String, description: "\u9600\u4F53\u6CC4\u6F0F\u7B49\u7EA7", example: "V" }, valveDescription: { required: false, type: () => String, description: "\u9600\u4F53\u63CF\u8FF0", example: "..." }, actuatorBrand: { required: false, type: () => String, description: "\u6267\u884C\u673A\u6784\u54C1\u724C", example: "Fisher" }, actuatorSeries: { required: false, type: () => String, description: "\u6267\u884C\u673A\u6784\u7C7B\u578B", example: "\u6C14\u52A8" }, actuatorSize: { required: false, type: () => String, description: "\u6267\u884C\u673A\u6784\u5C3A\u5BF8", example: "DN50" }, handwheel: { required: false, type: () => String, description: "\u624B\u8F6E", example: "\u6709" }, actuatorActionForm: { required: false, type: () => String, description: "\u6267\u884C\u673A\u6784\u4F5C\u7528\u5F62\u5F0F", example: "DN50" }, actuatorDescription: { required: false, type: () => String, description: "\u6267\u884C\u673A\u6784\u63CF\u8FF0", example: "..." }, regulatorBrand: { required: false, type: () => String, description: "\u8FC7\u6EE4\u51CF\u538B\u9600\u54C1\u724C", example: "Fisher" }, regulatorModel: { required: false, type: () => String, description: "\u8FC7\u6EE4\u51CF\u538B\u9600\u578B\u53F7", example: "\u6C14\u52A8" }, regulatorDescription: { required: false, type: () => String, description: "\u8FC7\u6EE4\u51CF\u538B\u9600\u63CF\u8FF0", example: "..." }, positionerBrand: { required: false, type: () => String, description: "\u5B9A\u4F4D\u5668\u54C1\u724C", example: "Fisher" }, positionerModel: { required: false, type: () => String, description: "\u5B9A\u4F4D\u5668\u7C7B\u578B", example: "\u6C14\u52A8" }, positionerDescription: { required: false, type: () => String, description: "\u5B9A\u4F4D\u5668\u63CF\u8FF0", example: "..." }, sovBrand: { required: false, type: () => String, description: "\u7535\u78C1\u9600\u54C1\u724C", example: "Fisher" }, sovModel: { required: false, type: () => String, description: "\u7535\u78C1\u9600\u578B\u53F7", example: "\u6C14\u52A8" }, sovQty: { required: false, type: () => Number, description: "\u7535\u78C1\u9600\u6570\u91CF", example: 1 }, sovDescription: { required: false, type: () => String, description: "\u7535\u78C1\u9600\u63CF\u8FF0", example: "..." }, lsBrand: { required: false, type: () => String, description: "\u9650\u4F4D\u5F00\u5173\u54C1\u724C", example: "Fisher" }, lsModel: { required: false, type: () => String, description: "\u9650\u4F4D\u5F00\u5173\u578B\u53F7", example: "\u6C14\u52A8" }, lsQty: { required: false, type: () => Number, description: "\u9650\u4F4D\u5F00\u5173\u6570\u91CF", example: 1 }, lsDescription: { required: false, type: () => String, description: "\u9650\u4F4D\u5F00\u5173\u63CF\u8FF0", example: "..." }, tripValveBrand: { required: false, type: () => String, description: "\u4FDD\u4F4D\u9600\u54C1\u724C", example: "Fisher" }, tripValveModel: { required: false, type: () => String, description: "\u4FDD\u4F4D\u9600\u578B\u53F7", example: "\u6C14\u52A8" }, tripValveDescription: { required: false, type: () => String, description: "\u4FDD\u4F4D\u9600\u63CF\u8FF0", example: "..." }, vbBrand: { required: false, type: () => String, description: "\u653E\u5927\u5668\u54C1\u724C", example: "Fisher" }, vbModel: { required: false, type: () => String, description: "\u653E\u5927\u5668\u578B\u53F7", example: "\u6C14\u52A8" }, vbQty: { required: false, type: () => Number, description: "\u653E\u5927\u5668\u6570\u91CF", example: 1 }, vbDescription: { required: false, type: () => String, description: "\u653E\u5927\u5668\u63CF\u8FF0", example: "..." }, qeBrand: { required: false, type: () => String, description: "\u5FEB\u6392\u9600\u54C1\u724C", example: "Fisher" }, qeModel: { required: false, type: () => String, description: "\u5FEB\u6392\u9600\u578B\u53F7", example: "\u6C14\u52A8" }, qeQty: { required: false, type: () => Number, description: "\u5FEB\u6392\u9600\u6570\u91CF", example: 1 }, qeDescription: { required: false, type: () => String, description: "\u5FEB\u6392\u9600\u63CF\u8FF0", example: "..." }, pilotBrand: { required: false, type: () => String, description: "\u6C14\u63A7\u9600\u54C1\u724C", example: "Fisher" }, pilotModel: { required: false, type: () => String, description: "\u6C14\u63A7\u9600\u578B\u53F7", example: "\u6C14\u52A8" }, pilotQty: { required: false, type: () => Number, description: "\u6C14\u63A7\u9600\u6570\u91CF", example: 1 }, pilotDescription: { required: false, type: () => String, description: "\u6C14\u63A7\u9600\u63CF\u8FF0", example: "..." }, valveStemSize: { required: false, type: () => String, description: "\u9600\u4F53\u9600\u6746\u5C3A\u5BF8", example: "DN50" }, stroke: { required: false, type: () => String, description: "\u884C\u7A0B", example: "DN50" }, signalComparatorBrand: { required: false, type: () => String, description: "\u4FE1\u53F7\u6BD4\u8F83\u5668\u54C1\u724C", example: "..." }, signalComparatorModel: { required: false, type: () => String, description: "\u4FE1\u53F7\u6BD4\u8F83\u5668\u578B\u53F7", example: "..." }, signalComparatorDescription: { required: false, type: () => String, description: "\u4FE1\u53F7\u6BD4\u8F83\u5668\u63CF\u8FF0", example: "..." }, parts: { required: false, type: () => String, description: "\u5907\u4EF6", example: "..." }, deviceId: { required: false, type: () => Number, description: "\u88C5\u7F6Eid", example: 1 }, factoryId: { required: true, type: () => Number, description: "\u5DE5\u5382id", example: 1 }, analysisTaskId: { required: false, type: () => Number, description: "\u5206\u6790\u4EFB\u52A1id", example: 1 } }, "QueryValveDto": {}, "UpdateValveDto": { id: { required: true, type: () => Number } }, "QueryValveListDto": { valveId: { required: true, type: () => Number } } }], [import("./modules/auth/authentication/authentication.entity"), { "SignInEntity": { accessToken: { required: true, type: () => String }, refreshToken: { required: true, type: () => String } } }]], "controllers": [[import("./app.controller"), { "AppController": { "getHello": {}, "getMail": {} } }], [import("./modules/auth/authentication/authentication.controller"), { "AuthenticationController": { "signUp": { summary: "\u6CE8\u518C" }, "signIn": { summary: "\u767B\u5F55" }, "refreshTokens": { summary: "\u5237\u65B0\u4EE4\u724C" } } }], [import("./modules/system/user/user.controller"), { "UserController": { "create": { summary: "\u521B\u5EFA\u7528\u6237" }, "findAll": { summary: "\u83B7\u53D6\u7528\u6237\u5217\u8868" }, "findSelf": { summary: "\u83B7\u53D6\u5F53\u524D\u767B\u5F55\u7528\u6237\u4FE1\u606F", type: Object }, "changePassword": { summary: "\u4FEE\u6539\u5BC6\u7801" }, "findOne": { summary: "\u83B7\u53D6\u5355\u4E2A\u7528\u6237\u4FE1\u606F", type: Object }, "update": { summary: "\u66F4\u65B0\u7528\u6237" }, "remove": { summary: "\u5220\u9664\u7528\u6237", type: String } } }], [import("./modules/system/dept/dept.controller"), { "DeptController": { "create": { summary: "\u521B\u5EFA\u90E8\u95E8" }, "findAll": { summary: "\u83B7\u53D6\u90E8\u95E8\u5217\u8868", type: [Object] }, "findOne": { summary: "\u83B7\u53D6\u90E8\u95E8\u8BE6\u60C5" }, "update": { summary: "\u66F4\u65B0\u90E8\u95E8" }, "remove": { summary: "\u5220\u9664\u90E8\u95E8" } } }], [import("./modules/system/dict-data/dict-data.controller"), { "DictDataController": { "create": { summary: "\u521B\u5EFA\u5B57\u5178\u6570\u636E" }, "findAll": {}, "findOne": { summary: "\u83B7\u53D6\u5B57\u5178\u6570\u636E\u8BE6\u60C5", type: Object }, "update": {}, "remove": {} } }], [import("./modules/system/dict-type/dict-type.controller"), { "DictTypeController": { "create": { summary: "\u521B\u5EFA\u5B57\u5178" }, "findAll": { summary: "\u83B7\u53D6\u5B57\u5178\u5217\u8868" }, "findOne": { summary: "\u83B7\u53D6\u5B57\u5178\u8BE6\u60C5", type: Object }, "update": { summary: "\u66F4\u65B0\u5B57\u5178" }, "remove": { summary: "\u5220\u9664\u5B57\u5178" } } }], [import("./modules/system/menu/menu.controller"), { "MenuController": { "create": { summary: "\u521B\u5EFA\u83DC\u5355" }, "findAll": { summary: "\u83B7\u53D6\u83DC\u5355\u5217\u8868", type: [Object] }, "findOne": { summary: "\u83B7\u53D6\u83DC\u5355\u8BE6\u60C5", type: Object }, "update": { summary: "\u66F4\u65B0\u83DC\u5355" }, "remove": { summary: "\u5220\u9664\u83DC\u5355" } } }], [import("./modules/system/post/post.controller"), { "PostController": { "create": { summary: "\u521B\u5EFA\u5C97\u4F4D" }, "findAll": { summary: "\u83B7\u53D6\u5C97\u4F4D\u5217\u8868" }, "findOne": { summary: "\u83B7\u53D6\u5C97\u4F4D\u8BE6\u60C5", type: Object }, "update": { summary: "\u66F4\u65B0\u5C97\u4F4D" }, "remove": { summary: "\u5220\u9664\u5C97\u4F4D" } } }], [import("./modules/system/role/role.controller"), { "RoleController": { "create": { summary: "\u521B\u5EFA\u6743\u9650" }, "findAll": { summary: "\u83B7\u53D6\u6743\u9650\u5217\u8868" }, "findOne": { summary: "\u83B7\u53D6\u6743\u9650\u8BE6\u60C5" }, "update": { summary: "\u66F4\u65B0\u6743\u9650" }, "remove": { summary: "\u5220\u9664\u6743\u9650" } } }], [import("./modules/monitor/login/login.controller"), { "LoginController": { "findAll": { summary: "\u83B7\u53D6\u767B\u5F55\u65E5\u5FD7\u5217\u8868" }, "findOne": { summary: "\u83B7\u53D6\u767B\u5F55\u65E5\u5FD7\u8BE6\u60C5", type: Object } } }], [import("./modules/monitor/operation/operation.controller"), { "OperationController": { "findAll": { summary: "\u83B7\u53D6\u65E5\u5FD7\u5217\u8868" }, "findOne": { summary: "\u83B7\u53D6\u65E5\u5FD7\u8BE6\u60C5" } } }], [import("./modules/monitor/info/info.controller"), { "InfoController": { "systemInfo": {} } }], [import("./modules/project/analysis-task/analysis-task.controller"), { "AnalysisTaskController": { "create": { summary: "\u521B\u5EFA\u5206\u6790\u4EFB\u52A1" }, "findAll": { summary: "\u83B7\u53D6\u5206\u6790\u4EFB\u52A1\u5217\u8868" }, "execute": { summary: "\u6267\u884C\u5206\u6790\u4EFB\u52A1", type: String }, "upload": { summary: "\u4E0A\u4F20PDF\u6587\u4EF6" }, "result": { summary: "\u83B7\u53D6\u5206\u6790\u4EFB\u52A1\u7ED3\u679C" }, "removeAll": { summary: "\u5220\u9664\u6240\u6709\u5206\u6790\u4EFB\u52A1", type: String }, "findOne": { summary: "\u83B7\u53D6\u5206\u6790\u4EFB\u52A1\u8BE6\u60C5", type: Object }, "update": { summary: "\u83B7\u53D6\u5206\u6790\u4EFB\u52A1\u8BE6\u60C5" }, "remove": { summary: "\u5220\u9664\u5206\u6790\u4EFB\u52A1", type: String } } }], [import("./modules/project/device/device.controller"), { "DeviceController": { "create": { summary: "\u521B\u5EFA\u88C5\u7F6E" }, "findAll": { summary: "\u83B7\u53D6\u88C5\u7F6E\u5217\u8868" }, "removeAll": { summary: "\u5168\u90E8\u5220\u9664", type: String }, "findOne": { summary: "\u83B7\u53D6\u88C5\u7F6E\u4FE1\u606F", type: Object }, "update": { summary: "\u66F4\u65B0\u88C5\u7F6E" }, "remove": { summary: "\u5220\u9664\u88C5\u7F6E", type: String } } }], [import("./modules/project/factory/factory.controller"), { "FactoryController": { "create": { summary: "\u521B\u5EFA\u5DE5\u5382" }, "findAll": { summary: "\u83B7\u53D6\u5DE5\u5382\u5217\u8868", type: [Object] }, "importValveData": { summary: "\u5BFC\u5165\u9600\u95E8\u6570\u636E", type: String }, "generateReport": { summary: "\u751F\u6210\u5DE5\u5382\u4E2D\u6240\u6709\u9600\u95E8\u62A5\u544A" }, "findChartData": { summary: "\u83B7\u53D6\u5DE5\u5382\u5DE5\u4F5C\u53F0\u8BE6\u60C5" }, "removeAll": { summary: "\u5220\u9664\u6240\u6709\u5DE5\u5382", type: String }, "findOne": { summary: "\u83B7\u53D6\u5355\u4E2A\u5DE5\u5382", type: Object }, "update": { summary: "\u66F4\u65B0\u5DE5\u5382" }, "remove": { summary: "\u5220\u9664\u5DE5\u5382", type: String } } }], [import("./modules/project/valve/valve.controller"), { "ValveController": { "create": { summary: "\u521B\u5EFA\u9600\u95E8" }, "findAll": { summary: "\u83B7\u53D6\u9600\u95E8\u5217\u8868" }, "exportValveList": { summary: "\u5BFC\u51FA\u9600\u95E8\u5217\u8868", type: [Object] }, "findOperatingDataList": { summary: "\u83B7\u53D6\u9600\u95E8\u8FD0\u884C\u6570\u636E\u5217\u8868", type: [Object] }, "findOperatingData": { summary: "\u83B7\u53D6\u9600\u95E8\u8FD0\u884C\u6570\u636E\u8BE6\u60C5", type: Object }, "findScoreList": { summary: "\u83B7\u53D6\u9600\u95E8\u8BC4\u5206\u5217\u8868", type: [Object] }, "findScore": { summary: "\u83B7\u53D6\u9600\u95E8\u8BC4\u5206\u8BE6\u60C5", type: Object }, "removeAll": { summary: "\u5220\u9664\u6240\u6709\u9600\u95E8", type: String }, "findOne": { summary: "\u83B7\u53D6\u9600\u95E8\u4FE1\u606F", type: Object }, "update": { summary: "\u66F4\u65B0\u9600\u95E8\u4FE1\u606F" }, "remove": { summary: "\u5220\u9664\u9600\u95E8", type: String } } }]] } };
};